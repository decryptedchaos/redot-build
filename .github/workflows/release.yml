name: Redot Build Release
on:
  workflow_dispatch:
    inputs:
      build-type:
        description: "What type of build"
        required: true
        type: choice
        default: all
        options:
          - all
          - linux
          - windows
          - osx
          - ios
          - web
          - android
      version:
        description: "What version to build"
        required: true
        type: string
        default: "4.3-rc.4"
      git-tag:
        description: "What tag or branch to use form redot engine"
        required: true
        type: string
        default: "redot-4.3-rc.4"
      container-tag:
        description: "Build container tag"
        required: true
        type: string
        default: "4.3-41"

# Global Settings
# SCONS_CACHE for windows must be set in the build environment
# TODO move mono builds to Redot ones
env:
  REDOT_BASE_VERSION_STATUS: stable
  REDOT_BASE_VERSION: ${{ github.event.inputs.version }}
  REDOT_BASENAME: Redot_v${{ github.event.inputs.version }}
  REDOT_VERSION_STATUS: custom
  REDOT_MONO_BUILD_TAG: release-4912f62 # mono-6.12.0.198
  REDOT_MONO_BUILD_REPO: godotengine/godot-mono-builds
  BUILD_NAME: official

jobs:
  tarball:
    runs-on: [self-hosted]
    container:
      image: ghcr.io/trashguy/redot-linux:${{ github.event.inputs.container-tag }}
    env:
      REDOT_VERSION: ${{ github.event.inputs.version }}
    steps:

      # Cleanup for self-hosted bois running all the time
      - name: 'Cleanup build folder'
        run: |
          rm -rf ./* || true
          rm -rf ./.??* || true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create source cache
        id: source-cache
        uses: actions/cache@v4
        with:
          path: redot-engine
          key: redot-engine-${{env.REDOT_BASE_VERSION}}
          restore-keys: |
            redot-engine-${{env.REDOT_BASE_VERSION}}

      - name: Checkout Redot source
        uses: actions/checkout@v4
        with:
          repository: Redot-Engine/redot-engine
          fetch-tags: true
          ref: ${{ github.event.inputs.git-tag }}
          path: redot-engine

      - name: Setup deps
        uses: ./.github/actions/build-deps
        with:
          working: "redot-engine"

      - name: Validate and Tarball
        if: steps.source-cache.outputs.cache-hit != 'true'
        working-directory: redot-engine
        shell: bash
        run: |
          cp ../check_version.py .
          correct_version=$(python3 check_version.py)

          if [[ "$correct_version" != "True" ]]; then
            echo "Version in version.py doesn't match the passed ${{ github.event.inputs.version }}."
            exit 1
          fi

          sh misc/scripts/make_tarball.sh -v ${{ github.event.inputs.version }}
          cp ../redot-${{ github.event.inputs.version }}.tar.gz .

  mono-glue:
    needs: tarball
    runs-on: [self-hosted]
    container:
      image: ghcr.io/trashguy/redot-linux:${{ github.event.inputs.container-tag }}
    env:
      SCONS: scons  verbose=yes warnings=no progress=no
      OPTIONS: debug_symbols=no use_static_cpp=no
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get source cache
        uses: actions/cache/restore@v4
        with:
          path: redot-engine
          key: redot-engine-${{env.REDOT_BASE_VERSION}}
          restore-keys: |
            redot-engine-${{env.REDOT_BASE_VERSION}}

      - name: Mono cache
        uses: actions/cache@v4
        id: mono-cache
        with:
          path: redot-engine/mono-glue
          key: redot-engine-mono-${{env.REDOT_BASE_VERSION}}
          restore-keys: |
            redot-engine-mono-${{env.REDOT_BASE_VERSION}}

      - name: Build mono glue
        if: steps.mono-cache.outputs.cache-hit != 'true'
        shell: bash
        working-directory: redot-engine
        run: |
          export PATH="${GODOT_SDK_LINUX_X86_64}/bin:${BASE_PATH}"
          echo "Building and generating Mono glue..."
          dotnet --info
          ${SCONS} platform=linuxbsd ${OPTIONS} target=editor module_mono_enabled=yes
          bin/redot.linuxbsd.editor.x86_64.mono --headless --generate-mono-glue mono-glue
  #
  # linux:
  #   name: Linux ${{ matrix.name }}
  #   needs: mono-glue
  #   runs-on: [self-hosted]
  #   concurrency:
  #     group: linux-${{ github.ref }}
  #     cancel-in-progress: true
  #   container:
  #     image: ghcr.io/trashguy/redot-linux:${{ github.event.inputs.container-tag }}
  #   env:
  #     SCONS: scons  verbose=yes warnings=no progress=no
  #     OPTIONS: production=yes
  #     OPTIONS_MONO: module_mono_enabled=yes
  #   strategy:
  #     fail-fast: false
  #     max-parallel: 1
  #     matrix:
  #       include:
  #         - name: Editor & Templates
  #           cache-name: linux
  #           build-mono: false
  #         - name: Editor & Templates w/ Mono
  #           cache-name: linux-mono
  #           build-mono: true
  #
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Get source cache
  #       uses: actions/cache/restore@v4
  #       with:
  #         path: redot-engine
  #         key: redot-engine-${{env.REDOT_BASE_VERSION}}
  #         restore-keys: |
  #           redot-engine-${{env.REDOT_BASE_VERSION}}
  #
  #     - name: Mono cache
  #       uses: actions/cache/restore@v4
  #       with:
  #         path: redot-engine/mono-glue
  #         key: redot-engine-mono-${{env.REDOT_BASE_VERSION}}
  #         restore-keys: |
  #           redot-engine-mono-${{env.REDOT_BASE_VERSION}}
  #
  #     - name: Setup Redot build cache
  #       uses: ./.github/actions/scons-cache
  #       with:
  #         cache-name: ${{ matrix.cache-name }}
  #       continue-on-error: true
  #
  #     - name: Build Linux Editor and Templates
  #       uses: ./.github/actions/build-linux
  #       with:
  #         mono: ${{ matrix.build-mono }}
  #
  windows:
    name: Windows ${{ matrix.name }}
    needs: mono-glue
    runs-on: [ self-hosted ]
    concurrency:
      group: windows-${{ github.ref }}
      cancel-in-progress: true
    container:
      image: ghcr.io/trashguy/redot-windows:${{ github.event.inputs.container-tag }}
    env:
      SCONS: scons verbose=yes warnings=no progress=no
      OPTIONS: production=yes use_mingw=yes angle_libs=deps/angle mesa_libs=deps/mesa d3d12=yes accesskit_sdk_path=deps/accesskit-c
      OPTIONS_MONO: module_mono_enabled=yes
      OPTIONS_LLVM: use_llvm=yes mingw_prefix=/root/llvm-mingw
      STEAM: 0
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - name: Editor & Templates
            cache-name: windows
            build-mono: false
          - name: Editor & Templates w/ Mono
            cache-name: windows-mono
            build-mono: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get source cache
        uses: actions/cache/restore@v4
        with:
          path: redot-engine
          key: redot-engine-${{env.REDOT_BASE_VERSION}}
          restore-keys: |
            redot-engine-${{env.REDOT_BASE_VERSION}}

      - name: Mono cache
        uses: actions/cache/restore@v4
        with:
          path: redot-engine/mono-glue
          key: redot-engine-mono-${{env.REDOT_BASE_VERSION}}
          restore-keys: |
            redot-engine-mono-${{env.REDOT_BASE_VERSION}}

      - name: Setup Redot build cache
        uses: ./.github/actions/scons-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Build windows Editor and Templates
        uses: ./.github/actions/build-windows
        with:
          mono: ${{ matrix.build-mono }}
#
#  macos:
#    name: Macos ${{ matrix.name }}
#    needs: mono-glue
#    runs-on: "ubuntu-latest"
#    container:
#      image: ghcr.io/trashguy/redot-macos:${{ github.event.inputs.container-tag }}
#    env:
#      SCONS: scons  verbose=yes warnings=no progress=no
#      OPTIONS: osxcross_sdk=darwin24.2 production=yes use_volk=no vulkan_sdk_path=/root/moltenvk angle_libs=/root/angle
#      OPTIONS_MONO: module_mono_enabled=yes
#      IOS_SDK: "18.2"
#      XCODE_SDK: "16.2"
#      OSX_SDK: "15.2"
#    strategy:
#      fail-fast: false
#      max-parallel: 1
#      matrix:
#        include:
#          - name: Editor & Templates
#            cache-name: macos
#            build-mono: false
#          - name: Editor & Templates w/ Mono
#            cache-name: macos-mono
#            build-mono: true
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Get source cache
#        uses: actions/cache/restore@v4
#        with:
#          path: redot-engine
#          key: redot-engine-${{env.REDOT_BASE_VERSION}}
#          restore-keys: |
#            redot-engine-${{env.REDOT_BASE_VERSION}}
#
#      - name: Mono cache
#        uses: actions/cache/restore@v4
#        with:
#          path: redot-engine/mono-glue
#          key: redot-engine-mono-${{env.REDOT_BASE_VERSION}}
#          restore-keys: |
#            redot-engine-mono-${{env.REDOT_BASE_VERSION}}
#
#      - name: Setup Redot build cache
#        uses: ./.github/actions/scons-cache
#        with:
#          cache-name: ${{ matrix.cache-name }}
#        continue-on-error: true
#
#      - name: Build windows Editor and Templates
#        uses: ./.github/actions/build-macos
#        with:
#          mono: ${{ matrix.build-mono }}
#
#  web:
#    name: Web
#    needs: mono-glue
#    runs-on: [self-hosted]
#    concurrency:
#      group: web-${{ github.ref }}
#      cancel-in-progress: true
#    container:
#      image: ghcr.io/trashguy/redot-web:${{ github.event.inputs.container-tag }}
#    env:
#      SCONS: scons  verbose=yes warnings=no progress=no
#      OPTIONS: production=yes
#      OPTIONS_MONO: module_mono_enabled=yes
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Get source cache
#        uses: actions/cache/restore@v4
#        with:
#          path: redot-engine
#          key: redot-engine-${{env.REDOT_BASE_VERSION}}
#          restore-keys: |
#            redot-engine-${{env.REDOT_BASE_VERSION}}
#
#      - name: Mono cache
#        uses: actions/cache/restore@v4
#        with:
#          path: redot-engine/mono-glue
#          key: redot-engine-mono-${{env.REDOT_BASE_VERSION}}
#          restore-keys: |
#            redot-engine-mono-${{env.REDOT_BASE_VERSION}}
#
#      - name: Setup Redot build cache
#        uses: ./.github/actions/scons-cache
#        with:
#          cache-name: ${{ matrix.cache-name }}
#        continue-on-error: true
#
#      - name: Build web Editor and Templates
#        uses: ./.github/actions/build-web

  # build-release-linux:
  #   name: Build Release Linux
  #   needs: linux
  #   runs-on: [self-hosted]
  #   steps:
  #     # Cleanup for self-hosted bois running all the time
  #     - name: 'Cleanup build folder'
  #       run: |
  #         rm -rf ./* || true
  #         rm -rf ./.??* || true
  #
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Build Linux Release
  #       uses: ./.github/actions/build-release-linux
  #
  build-release-windows:
    name: Build Release Windows
    needs: windows
    runs-on: [self-hosted]
    steps:
      # Cleanup for self-hosted bois running all the time
      - name: 'Cleanup build folder'
        run: |
          rm -rf ./* || true
          rm -rf ./.??* || true

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Linux Release
        uses: ./.github/actions/build-release-windows

#v
