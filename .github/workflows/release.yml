name: Redot Build Release
on:
  workflow_dispatch:
    inputs:
      build-type:
        description: "What type of build"
        required: true
        type: choice
        default: all
        options:
          - all
          - linux
          - windows
          - osx
          - ios
          - web
          - android
      version:
        description: "What version to build"
        required: true
        type: string
        default: "4.3-beta.3"
      git-tag:
        description: "What tag or branch to use form redot engine"
        required: true
        type: string
        default: "redot-4.3-beta.3"
      container-tag:
        description: "Build container tag"
        required: true
        type: string
        default: "4.3-40"

# Global Settings
# SCONS_CACHE for windows must be set in the build environment
# TODO move mono builds to Redot ones
env:
  REDOT_BASE_VERSION_STATUS: stable
  REDOT_VERSION_STATUS: custom
  REDOT_MONO_BUILD_TAG: release-4912f62 # mono-6.12.0.198
  REDOT_MONO_BUILD_REPO: godotengine/godot-mono-builds
  BUILD_NAME: official


jobs:
  tarball:
    runs-on: "ubuntu-latest"
    env:
      REDOT_VERSION: ${{ github.event.inputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout Redot source
        uses: actions/checkout@v4
        with:
          repository: Redot-Engine/redot-engine
          fetch-tags: true
          ref: ${{ github.event.inputs.git-tag }}
          path: redot-engine

      - name: Setup deps
        uses: ./.github/actions/build-deps
        with:
          working: "redot-engine"

      - name: Validate and Tarball
        working-directory: redot-engine
        shell: bash
        run: |
          cp ../check_version.py .
          correct_version=$(python3 check_version.py)

          if [[ "$correct_version" != "True" ]]; then
            echo "Version in version.py doesn't match the passed ${{ github.event.inputs.version }}."
            exit 1
          fi

          sh misc/scripts/make_tarball.sh -v ${{ github.event.inputs.version }}
          cp ../redot-${{ github.event.inputs.version }}.tar.gz .

      - name: Cache Build
        uses: actions/cache@v4
        with:
          path: redot-engine
          key: tarball

  mono-glue:
    needs: tarball
    runs-on: "ubuntu-latest"
    container:
      image: ghcr.io/trashguy/redot-linux:${{ github.event.inputs.container-tag }}
    defaults:
      run:
        working-directory: redot-engine
    env:
      SCONS: scons verbose=yes warnings=no progress=no
      OPTIONS: debug_symbols=no use_static_cpp=no
      PATH: ${GODOT_SDK_LINUX_X86_64}/bin:${BASE_PATH}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Restore
        uses: actions/cache@v4
        with:
          path: redot-engine
          key: tarball

      - name: Setup Redot build cache
        uses: ./.github/actions/redot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Build mono glue
        shell: bash
        working-directory: redot-engine
        run: |
          export PATH="${GODOT_SDK_LINUX_X86_64}/bin:${BASE_PATH}"
          echo "Building and generating Mono glue..."
          dotnet --info
          ${SCONS} platform=linuxbsd ${OPTIONS} target=editor module_mono_enabled=yes
          bin/redot.linuxbsd.editor.x86_64.mono --headless --generate-mono-glue mono-glue

  linux:
    needs: mono-glue
    runs-on: "ubuntu-latest"
    container:
      image: ghcr.io/trashguy/redot-linux:${{ github.event.inputs.container-tag }}
    defaults:
      run:
        working-directory: redot-engine
    name: Linux ${{ matrix.name }}
    env:
      SCONSFLAGS: mono_static=yes
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor & Templates
            cache-name: linux
            bin: ./redot-engine/bin/redot.linuxbsd.editor.x86_64
            build-mono: false

          - name: Editor & Templates w/ Mono
            cache-name: linux-mono
            bin: ./redot-engine/bin/redot.linuxbsd.editor.x86_64.mono
            build-mono: true

    steps:
      - name: Cache Build
        uses: actions/cache@v4
        with:
          path: redot-engine
          key: tarball

      - name: Setup Redot build cache
        uses: ./.github/actions/redot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true
