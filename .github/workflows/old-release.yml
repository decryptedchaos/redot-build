name: OLD Redot Build Release
on:
  workflow_dispatch:
    inputs:
      make-release:
        description: "Build a release"
        required: true
        type: boolean
        default: false
      build-type:
        description: "What type of build"
        required: true
        type: choice
        default: all
        options:
          - all
          - linux
          - windows
          - osx
          - ios
          - web
          - android
      version:
        description: "What version to build"
        required: true
        type: string
        default: '4.3'
        
# Global Settings
# SCONS_CACHE for windows must be set in the build environment
env:
  REDOT_BASE_VERSION: 4.3
  REDOT_BASE_VERSION_STATUS: stable
  REDOT_VERSION_STATUS: custom
  REDOT_MONO_BUILD_TAG: release-4912f62 # mono-6.12.0.198
  REDOT_MONO_BUILD_REPO: godotengine/godot-mono-builds
  
jobs:
  linux:
    runs-on: "ubuntu-latest"
    name: Linux ${{ matrix.name }}
    if: github.event.inputs.platform == 'linux' || 'all'
    env:
      SCONSFLAGS: mono_static=yes
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor & Templates
            cache-name: linux
            bin: ./redot-engine/bin/redot.linuxbsd.editor.x86_64
            build-mono: false

          - name: Editor & Templates w/ Mono
            cache-name: linux-mono
            bin: ./redot-engine/bin/redot.linuxbsd.editor.x86_64.mono
            build-mono: true

    steps:
      - name: Checkout Build
        uses: actions/checkout@v4

      - name: Checkout Redot source
        uses: actions/checkout@v4
        with:
          repository: 'Redot-Engine/redot-engine'
          ref: '${{ github.event.inputs.version }}'
          path: redot-engine

      - name: Linux dependencies
        shell: bash
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EB8B81E14DA65431D7504EA8F63F0F2B90935439
          sudo add-apt-repository -y "deb https://ppa.launchpadcontent.net/kisak/turtle/ubuntu focal main"
          sudo apt update && sudo apt-get install -y xvfb libc6-dev p7zip-full p7zip-rar libwayland-dev \
            mesa-vulkan-drivers dotnet-sdk-8.0

      # Linux Toolchain Setup
      - name: Setup Linux toolchain
        uses: ./.github/actions/redot-buildroot
        with:
          toolchain-name: "x86_64-godot-linux-gnu_sdk-buildroot"

      # Cache
      - name: Setup Godot build cache
        uses: ./.github/actions/redot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/redot-deps

      # Mono Setup
      - name: Setup mono
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/redot-mono
        with:
          mono-release: "linux-x86_64"
          mono-bcl: "bcl-desktop"

      - name: Mono precompilation
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/redot-build
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} module_mono_enabled=yes mono_glue=no copy_mono_root=yes mono_bcl=$HOME/mono-bcls/desktop-bcl/net_4_x mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release
          platform: linuxbsd
          target: editor
          tools: true

      # Generate mono glue
      - name: Generate Mono glue code
        if: ${{ matrix.build-mono }}
        run: |
          DRI_PRIME=0 xvfb-run "./bin/redot.x11.tools.64.mono" --generate-mono-glue modules/mono/glue || true

      - name: Set Mono scons flags
        if: ${{ matrix.build-mono }}
        run: |
          echo "MONO_SCONSFLAGS=module_mono_enabled=yes mono_glue=yes copy_mono_root=yes mono_bcl=$HOME/mono-bcls/desktop-bcl/net_4_x" >> $GITHUB_ENV

      - name: Clear bin
        run: |
          rm -rf bin

      # Editor
      - name: Compilation
        uses: ./.github/actions/redot-build
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release' || '' }}
          platform: linuxbsd
          target: editor
          tools: true

      - name: Generate C# glue
        if: ${{ matrix.build-mono }}
        run: |
          ${{ matrix.bin }} --headless --generate-mono-glue ./redot-engine/modules/mono/glue

      - name: Build .NET solutions
        if: ${{ matrix.build-mono }}
        run: |
          ./redot-engine/modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./redot-engine/bin --godot-platform=linuxbsd

      - name: Prep Executables
        shell: bash
        run: |
          strip redot-engine/bin/redot.*
          chmod +x redot-engine/bin/redot.*

      - name: Upload Editor
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-editor-64
          path: redot-engine/bin

      - name: Clear bin
        run: |
          rm -rf bin

      # Templates
      - name: Compilation
        uses: ./.github/actions/redot-build
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release' || '' }}
          platform: linuxbsd
          target: template_release
          tools: false

      - name: Compilation
        uses: ./.github/actions/redot-build
        with:
          buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-linux-x86_64-release' || '' }} debug_symbols=no
          platform: linuxbsd
          target: template_release
          tools: false

      - name: Upload Templates
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-templates-64
          path: redot-engine/bin

      - name: Clear bin
        run: |
          rm -rf bin
  windows:
    runs-on: "ubuntu-latest"
    name: üèÅ Windows-64 ${{ matrix.name }}
    if: github.event.inputs.platform == 'windows' || 'all'
    env:
      SCONSFLAGS: use_mingw=yes
    strategy:
      fail-fast: false
      matrix:
        include:
#           - name: Editor & Templates
#             cache-name: windows-64
#             bin: ./redot-engine/bin/redot.windows.editor.x86_64.exe
#             artifact-name: windows
#             build-mono: false

          - name: Editor & Templates w/ Mono
            cache-name: windows-64-mono
            bin: ./redot-engine/bin/redot.windows.editor.x86_64.mono.exe
            artifact-name: windows-mono
            build-mono: true

    steps:
      - name: Checkout Build
        uses: actions/checkout@v4

      - name: Checkout Redot source
        uses: actions/checkout@v4
        with:
          repository: 'Redot-Engine/redot-engine'
          ref: '${{ github.event.inputs.version }}'
          path: redot-engine

      - name: Linux dependencies
        shell: bash
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EB8B81E14DA65431D7504EA8F63F0F2B90935439
          sudo add-apt-repository -y "deb https://ppa.launchpadcontent.net/kisak/turtle/ubuntu focal main"
          sudo apt update && sudo apt-get install -y xvfb libc6-dev p7zip-full p7zip-rar libwayland-dev \
            mesa-vulkan-drivers dotnet-sdk-8.0 unzip
          # The actual dependencies
          sudo apt-get install -y build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev \
            libdbus-1-dev libudev-dev libxi-dev libxrandr-dev yasm xvfb unzip \
            libspeechd-dev speech-dispatcher libgl1-mesa-glx
          sudo apt-get -f install

      - name: Windows dependencies
        shell: bash
        run: |
          sudo apt-get -y install mingw-w64
          echo "1" | sudo update-alternatives --config x86_64-w64-mingw32-gcc
          echo "1" | sudo update-alternatives --config x86_64-w64-mingw32-g++
          echo "1" | sudo update-alternatives --config i686-w64-mingw32-gcc
          echo "1" | sudo update-alternatives --config i686-w64-mingw32-g++

      # Cache
      - name: Setup Godot build cache
        uses: ./.github/actions/redot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/redot-deps

      - name: Setup mono (x86_64)
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/redot-mono
        with:
          mono-bcl: "bcl-desktop-win32"
          mono-release: "windows-x86_64"

      # Mono Setup
      - name: Setup mono
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/redot-mono
        with:
          mono-bcl: "bcl-desktop-win32"
          mono-release: "windows-x86_64"

      - name: Mono precompilation
        if: ${{ matrix.build-mono }}
        uses: ./.github/actions/redot-build
        with:
          sconsflags: mono_static=yes module_mono_enabled=yes mono_glue=no
          platform: linuxbsd
          tools: true

      # Generate mono glue
      - name: Generate Mono glue code
        if: ${{ matrix.build-mono }}
        run: |
          DRI_PRIME=0 xvfb-run "./bin/redot.x11.tools.64.mono" --generate-mono-glue modules/mono/glue || true

      - name: Set Mono scons flags
        if: ${{ matrix.build-mono }}
        run: |
          echo "MONO_SCONSFLAGS=module_mono_enabled=yes mono_glue=yes copy_mono_root=yes mono_bcl=$HOME/mono-bcls/desktop-win32-bcl/net_4_x-win32 mono_static=yes" >> $GITHUB_ENV

      - name: Generate Glue Code
        if:  ${{ matrix.build-mono }}
        run: ./bin/redot.windows.editor.x86_64.mono.exe --headless --generate-mono-glue modules/mono/glue

      - name: Build GodotSharp
        if:  ${{ matrix.build-mono }}
        run: python modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin

      - name: Clear bin
        run: |
          rm -rf bin

      # Editor
      - name: Compilation (bits=64)
        uses: ./.github/actions/redot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-windows-x86_64-release' || '' }}
          platform: windows
          target: release_debug
          tools: true

      - name: Generate C# glue
        if: ${{ matrix.build-mono }}
        run: |
          ${{ matrix.bin }} --headless --generate-mono-glue ./redot-engine/modules/mono/glue

      - name: Build .NET solutions
        if: ${{ matrix.build-mono }}
        run: |
          ./redot-engine/modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./redot-engine/bin

      - name: Upload Editor
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.artifact-name }}-editor-64

      - name: Clear bin
        run: |
          rm -rf bin

      # Templates
      - name: Compilation (tools=false, bits=64, target=release_debug)
        uses: ./.github/actions/redot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-windows-x86_64-release' || '' }}
          platform: windows
          target: release_debug
          tools: false

      - name: Compilation (tools=false, bits=64, target=release)
        uses: ./.github/actions/redot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ env.MONO_SCONSFLAGS }} ${{ matrix.sconsflags }} bits=64 ${{ matrix.build-mono && 'mono_prefix=$HOME/mono-installs/desktop-windows-x86_64-release' || '' }} debug_symbols=no
          platform: windows
          target: release
          tools: false

      - name: Upload Templates
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.artifact-name }}-templates-64

      - name: Clear bin
        run: |
          rm -rf bin
