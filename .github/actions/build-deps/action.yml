name: Setup Redot build deps
description: Setup Redot build deps
inputs:
  python-version:
    description: The python version to use.
    default: "3.x"
  python-arch:
    description: The python architecture.
    default: "x64"
  working:
    description: Working Directory
    default: redot-engine

runs:
  using: "composite"
  steps:
    - name: Set up Python 3.x
      uses: actions/setup-python@v4
      with:
        # Semantic version range syntax or exact version of a Python version
        python-version: ${{ inputs.python-version }}
        # Optional - x64 or x86 architecture, defaults to x64
        architecture: ${{ inputs.python-arch }}

    - name: Setup scons
      shell: bash
      run: |
        python -c "import sys; print(sys.version)"
        python -m pip install scons
        scons --version

    - name: MoltenVK
      shell: bash
      working-directory: ${{ inputs.working }}
      run: |
        if [ ! -d "deps/moltenvk" ]; then
          echo "Missing MoltenVK for macOS, downloading it."
          mkdir -p deps/moltenvk
          pushd deps/moltenvk
          curl -L -o moltenvk.tar https://github.com/godotengine/moltenvk-osxcross/releases/download/vulkan-sdk-1.3.283.0-2/MoltenVK-all.tar
          tar xf moltenvk.tar && rm -f moltenvk.tar
          mv MoltenVK/MoltenVK/include/ MoltenVK/
          mv MoltenVK/MoltenVK/static/MoltenVK.xcframework/ MoltenVK/
          popd
        fi

    - name: Angle
      shell: bash
      working-directory: ${{ inputs.working }}
      run: |
        if [ ! -d "deps/angle" ]; then
          echo "Missing ANGLE libraries, downloading them."
          mkdir -p deps/angle
          pushd deps/angle
          base_url=https://github.com/godotengine/godot-angle-static/releases/download/chromium%2F6601.2/godot-angle-static
          curl -L -o windows_arm64.zip $base_url-arm64-llvm-release.zip
          curl -L -o windows_x86_64.zip $base_url-x86_64-gcc-release.zip
          curl -L -o windows_x86_32.zip $base_url-x86_32-gcc-release.zip
          curl -L -o macos_arm64.zip $base_url-arm64-macos-release.zip
          curl -L -o macos_x86_64.zip $base_url-x86_64-macos-release.zip
          unzip -o windows_arm64.zip && rm -f windows_arm64.zip
          unzip -o windows_x86_64.zip && rm -f windows_x86_64.zip
          unzip -o windows_x86_32.zip && rm -f windows_x86_32.zip
          unzip -o macos_arm64.zip && rm -f macos_arm64.zip
          unzip -o macos_x86_64.zip && rm -f macos_x86_64.zip
          popd
        fi

    - name: Mesa
      shell: bash
      working-directory: ${{ inputs.working }}
      run: |
        if [ ! -d "deps/mesa" ]; then
          echo "Missing Mesa/NIR libraries, downloading them."
          mkdir -p deps/mesa
          pushd deps/mesa
          curl -L -o mesa_arm64.zip https://github.com/godotengine/godot-nir-static/releases/download/23.1.9-1/godot-nir-static-arm64-llvm-release.zip
          curl -L -o mesa_x86_64.zip https://github.com/godotengine/godot-nir-static/releases/download/23.1.9-1/godot-nir-static-x86_64-gcc-release.zip
          curl -L -o mesa_x86_32.zip https://github.com/godotengine/godot-nir-static/releases/download/23.1.9-1/godot-nir-static-x86_32-gcc-release.zip
          unzip -o mesa_arm64.zip && rm -f mesa_arm64.zip
          unzip -o mesa_x86_64.zip && rm -f mesa_x86_64.zip
          unzip -o mesa_x86_32.zip && rm -f mesa_x86_32.zip
          popd
        fi
