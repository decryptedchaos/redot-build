name: Build Windows
description: Build Windows
inputs:
  mono:
    description: Build with mono
    type: bool
    default: false
    required: true
runs:
  using: "composite"
  steps:
    - name: Out cache Windows
      uses: actions/cache@v4
      id: out-cache
      with:
        path: redot-engine/out/windows
        key: out-windows-${{env.REDOT_BASE_VERSION}}
        restore-keys: |
          out-windows-${{env.REDOT_BASE_VERSION}}

    - name: Build Windows
      if: inputs.mono != true && steps.out-cache.outputs.cache-hit != 'true'
      working-directory: redot-engine
      shell: bash
      run: |
        echo "Starting classical build for Windows..."
      
        $SCONS platform=windows arch=x86_64 $OPTIONS target=editor
        mkdir -p out/windows/x86_64/tools
        cp -rvp bin/* out/windows/x86_64/tools
        rm -rf bin
      
        $SCONS platform=windows arch=x86_64 $OPTIONS target=template_debug
        $SCONS platform=windows arch=x86_64 $OPTIONS target=template_release
        mkdir -p out/windows/x86_64/templates
        cp -rvp bin/* out/windows/x86_64/templates
        rm -rf bin
      
        $SCONS platform=windows arch=x86_32 $OPTIONS target=editor
        mkdir -p out/windows/x86_32/tools
        cp -rvp bin/* out/windows/x86_32/tools
        rm -rf bin
      
        $SCONS platform=windows arch=x86_32 $OPTIONS target=template_debug
        $SCONS platform=windows arch=x86_32 $OPTIONS target=template_release
        mkdir -p out/windows/x86_32/templates
        cp -rvp bin/* out/windows/x86_32/templates
        rm -rf bin
      
        $SCONS platform=windows arch=arm64 $OPTIONS $OPTIONS_LLVM target=editor
        mkdir -p out/windows/arm64/tools
        cp -rvp bin/* out/windows/arm64/tools
        rm -rf bin
      
        $SCONS platform=windows arch=arm64 $OPTIONS $OPTIONS_LLVM target=template_debug
        $SCONS platform=windows arch=arm64 $OPTIONS $OPTIONS_LLVM target=template_release
        mkdir -p out/windows/arm64/templates
        cp -rvp bin/* out/windows/arm64/templates
        rm -rf bin
      
        if [ "${STEAM}" == "1" ]; then
          build_name=${BUILD_NAME}
          export BUILD_NAME="steam"
          $SCONS platform=windows arch=x86_64 $OPTIONS target=editor steamapi=yes
          $SCONS platform=windows arch=x86_32 $OPTIONS target=editor steamapi=yes
          mkdir -p out/windows/steam
          cp -rvp bin/* out/windows/steam
          rm -rf bin
          export BUILD_NAME=${build_name}
        fi

    - name: Build Windows Mono
      if: inputs.mono != false && steps.out-cache.outputs.cache-hit != 'true'
      working-directory: redot-engine
      shell: bash
      run: |
        echo "Starting Mono build for Windows..."
      
        cp -r mono-glue/GodotSharp/GodotSharp/Generated modules/mono/glue/GodotSharp/GodotSharp/
        cp -r mono-glue/GodotSharp/GodotSharpEditor/Generated modules/mono/glue/GodotSharp/GodotSharpEditor/
      
        $SCONS platform=windows arch=x86_64 $OPTIONS $OPTIONS_MONO target=editor
        ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=windows
        mkdir -p out/windows/x86_64/tools-mono
        cp -rvp bin/* out/windows/x86_64/tools-mono
        rm -rf bin
      
        $SCONS platform=windows arch=x86_64 $OPTIONS $OPTIONS_MONO target=template_debug
        $SCONS platform=windows arch=x86_64 $OPTIONS $OPTIONS_MONO target=template_release
        mkdir -p out/windows/x86_64/templates-mono
        cp -rvp bin/* out/windows/x86_64/templates-mono
        rm -rf bin
      
        $SCONS platform=windows arch=x86_32 $OPTIONS $OPTIONS_MONO target=editor
        ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=windows
        mkdir -p out/windows/x86_32/tools-mono
        cp -rvp bin/* out/windows/x86_32/tools-mono
        rm -rf bin
      
        $SCONS platform=windows arch=x86_32 $OPTIONS $OPTIONS_MONO target=template_debug
        $SCONS platform=windows arch=x86_32 $OPTIONS $OPTIONS_MONO target=template_release
        mkdir -p out/windows/x86_32/templates-mono
        cp -rvp bin/* out/windows/x86_32/templates-mono
        rm -rf bin
      
        $SCONS platform=windows arch=arm64 $OPTIONS $OPTIONS_MONO $OPTIONS_LLVM target=editor
        ./modules/mono/build_scripts/build_assemblies.py --godot-output-dir=./bin --godot-platform=windows
        mkdir -p out/windows/arm64/tools-mono
        cp -rvp bin/* out/windows/arm64/tools-mono
        rm -rf bin
      
        $SCONS platform=windows arch=arm64 $OPTIONS $OPTIONS_MONO $OPTIONS_LLVM target=template_debug
        $SCONS platform=windows arch=arm64 $OPTIONS $OPTIONS_MONO $OPTIONS_LLVM target=template_release
        mkdir -p out/windows/arm64/templates-mono
        cp -rvp bin/* out/windows/arm64/templates-mono
        rm -rf bin